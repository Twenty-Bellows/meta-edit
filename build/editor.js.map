{"version":3,"file":"editor.js","mappings":";;;;;;;;;;;;;;;;;;AAAqD;AACrB;AACa;AAAA;AAE7CE,2DAAS,CACR,2BAA2B,EAC3B,oCAAoC,EACpC,CAAEO,QAAQ,EAAE;EAAEC,KAAK;EAAEC,KAAK;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAM;EACvD,IAAKF,IAAI,KAAK,OAAO,EAAG;IACvB,OAAOH,QAAQ;EAChB;EACA,oBACCD,uDAAA,CAAAF,uDAAA;IAAAS,QAAA,gBACCX,sDAAA,CAACH,yCAAK;MAACS,KAAK,EAAGA,KAAO;MAACM,IAAI,EAAGH;IAAM,CAAE,CAAC,eACvCT,sDAAA,CAACJ,+DAAY;MACZgB,IAAI,EAAGH,IAAM;MACbF,KAAK,EAAGA,KAAO;MACfG,QAAQ,EAAGA;IAAU,CACrB,CAAC;EAAA,CACD,CAAC;AAEL,CACD,CAAC;;;;;;;;;;;;;;;;;ACtBM,SAASb,KAAKA,CAAE;EAAES,KAAK;EAAEM;AAAK,CAAC,EAAG;EACxC,MAAMC,aAAa,GAAGP,KAAK,CAACQ,OAAO,CAAE,IAAI,EAAE,GAAI,CAAC;EAChD,oBACCd,sDAAA;IACCe,OAAO,EAAGH,IAAM;IAChBI,KAAK,EAAG;MACPC,OAAO,EAAE,OAAO;MAChBC,YAAY,EAAE,MAAM;MACpBC,aAAa,EAAE;IAChB,CAAG;IAAAR,QAAA,EAEDE;EAAa,CACT,CAAC;AAEV;;;;;;;;;;;;;;;;;;;;ACd+C;AACO;AACT;AACb;AAAA;AAEhCf,2DAAS,CACR,2BAA2B,EAC3B,oCAAoC,EACpC,CAAEO,QAAQ,EAAE;EAAEC,KAAK;EAAEC,KAAK;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAM;EACvD,IAAKF,IAAI,KAAK,OAAO,EAAG;IACvB,OAAOH,QAAQ;EAChB;EACA,oBACCD,uDAAA;IAAAO,QAAA,gBACCX,sDAAA,CAACH,yCAAK;MAACS,KAAK,EAAGA,KAAO;MAACM,IAAI,EAAGH;IAAM,CAAE,CAAC,eACvCT,sDAAA,CAACqB,gEAAW;MACXC,QAAQ,EAAKC,QAAQ,IAAKb,QAAQ,CAAEa,QAAQ,EAAEC,GAAI,CAAG;MACrDC,YAAY,EAAG,CAAE,OAAO,CAAI;MAC5BC,MAAM,EAAGA,CAAE;QAAEC;MAAK,CAAC,KAClBpB,KAAK,gBACJP,sDAAA;QAAG4B,OAAO,EAAED,IAAK;QAAAhB,QAAA,eAACX,sDAAA;UAAK6B,GAAG,EAAGtB;QAAO,CAAE;MAAC,CAAG,CAAC,gBAE3CP,sDAAA,CAACoB,yDAAM;QAACQ,OAAO,EAAGD,IAAM;QAAAhB,QAAA,EAAC;MAAkB,CAAQ;IAElD,CACH,CAAC;EAAA,CACE,CAAC;AAER,CACD,CAAC;;;;;;;;;;;;;;;;;AC7BuD;AACX;AAAA;AAE7Cb,2DAAS,CACR,2BAA2B,EAC3B,oCAAoC,EACpC,CAAEO,QAAQ,EAAE;EAAEC,KAAK;EAAEC,KAAK;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAM;EACvD,IAAKF,IAAI,KAAK,UAAU,EAAG;IAC1B,OAAOH,QAAQ;EAChB;EACA,oBACCL,sDAAA,CAAC8B,kEAAe;IACfxB,KAAK,EAAGA,KAAO;IACfC,KAAK,EAAGA,KAAO;IACfG,QAAQ,EAAGA,QAAU;IACrBqB,uBAAuB;EAAA,CACvB,CAAC;AAEJ,CACD,CAAC;;;;;;;;;;;;;;ACnBmD;AACJ;AAChDG,mBAAO,CAAE,4DAAmB,CAAC;AAC7BA,mBAAO,CAAE,sDAAgB,CAAC;AAC1BA,mBAAO,CAAE,sDAAgB,CAAC;AAE1BF,kEAAc,CAAE,WAAW,EAAE;EAC5BG,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,WAAW;EAClBV,MAAM,EAAEO,wDAAeA;AACxB,CAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACV4D;AACnB;AACe;AACP;AAAA;AAEpD,MAAMA,eAAe,GAAGA,CAAA,KAAM;EAC7B,MAAMQ,QAAQ,GAAGH,0DAAS,CACvBI,MAAM,IAAMA,MAAM,CAAE,aAAc,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAC1D,EACD,CAAC;EAED,MAAMC,QAAQ,GAAGN,0DAAS,CACvBI,MAAM,IAAMA,MAAM,CAAE,MAAO,CAAC,CAACG,WAAW,CAAEJ,QAAS,CAAC,CAACG,QAAQ,EAC/D,CAAEH,QAAQ,CACX,CAAC;EAED,IACC,CAAEG,QAAQ,IACV,CAAEA,QAAQ,CAAE,WAAW,CAAE,IACzB,CAAEA,QAAQ,CAAE,WAAW,CAAE,CAAE,CAAC,CAAE,EAC7B;IACD;EACD;EAEA,MAAME,MAAM,GAAGF,QAAQ,CAAE,WAAW,CAAE,CAAE,CAAC,CAAE;EAE3C,MAAMG,MAAM,GAAGT,0DAAS,CACrBI,MAAM,IAAMA,MAAM,CAAE,aAAc,CAAC,CAACM,gBAAgB,CAAC,CAAC,EACxD,EACD,CAAC;EAED,MAAMC,kBAAkB,GAAGX,0DAAS,CACjCI,MAAM,IAAM;IACb,OAAOA,MAAM,CAAE,MAAO,CAAC,CAACQ,qBAAqB,CAC5C,UAAU,EACVT,QAAQ,EACRM,MACD,CAAC,EAAEI,IAAI;EACR,CAAC,EACD,CAAEV,QAAQ,EAAEM,MAAM,CACnB,CAAC;EAED,MAAMK,YAAY,GAAGX,QAAQ,CAC3B3B,OAAO,CAAE,IAAI,EAAE,GAAI,CAAC,CACpBA,OAAO,CAAE,OAAO,EAAIuC,IAAI,IAAMA,IAAI,CAACC,WAAW,CAAC,CAAE,CAAC;EAEpD,oBACCtD,sDAAA,CAACqC,yEAA0B;IAC1BzB,IAAI,EAAG,iBAAmB;IAC1BwB,KAAK,EAAG,GAAIgB,YAAY,OAAU;IAAAzC,QAAA,EAEhC4C,MAAM,CAACC,OAAO,CAAEV,MAAO,CAAC,CACxBW,MAAM,CAAE,CAAE,CAAEC,GAAG,CAAE,KAAM;MACvB,OAAOT,kBAAkB,CAAES,GAAG,CAAE,KAAKC,SAAS;IAC/C,CAAE,CAAC,CACFC,GAAG,CAAE,CAAE,CAAEF,GAAG,EAAEnD,KAAK,CAAE,KAAM;MAC3B,MAAME,IAAI,GAAGiD,GAAG;MAChB,MAAMpD,KAAK,GAAGG,IAAI,CAChBK,OAAO,CAAE,IAAI,EAAE,GAAI,CAAC,CACpBA,OAAO,CAAE,OAAO,EAAIuC,IAAI,IAAMA,IAAI,CAACC,WAAW,CAAC,CAAE,CAAC;MACpD,MAAM9C,IAAI,GAAGD,KAAK;MAClB,MAAMsD,SAAS,GAAGZ,kBAAkB,CAAES,GAAG,CAAE,IAAI,EAAE;MACjD,MAAMhD,QAAQ,GAAKa,QAAQ,IAAM;QAChCuC,EAAE,CAACC,IAAI,CAACC,QAAQ,CAAE,aAAc,CAAC,CAACC,QAAQ,CAAE;UAC3CC,EAAE,EAAEnB,MAAM;UACVvC,IAAI,EAAEiC,QAAQ;UACdU,IAAI,EAAE;YAAE,CAAEO,GAAG,GAAInC;UAAS;QAC3B,CAAE,CAAC;MACJ,CAAC;MAED,MAAMlB,QAAQ,GAAGkC,8DAAY,CAC5B,2BAA2B,EAC3B,IAAI,EACJ;QAAEjC,KAAK;QAAEC,KAAK,EAAEsD,SAAS;QAAErD,IAAI;QAAEC,IAAI;QAAEC;MAAS,CACjD,CAAC;MAED,oBAAOV,sDAAA;QAAAW,QAAA,EAAmBN;MAAQ,GAAhBqD,GAAuB,CAAC;IAC3C,CAAE;EAAC,CACuB,CAAC;AAE/B,CAAC;AAED,iEAAezB,eAAe,EAAC;AAE/BnC,2DAAS,CACR,2BAA2B,EAC3B,oCAAoC,EACpC,CAAEO,QAAQ,EAAE;EAAEC,KAAK;EAAEC,KAAK;EAAEG;AAAS,CAAC,KAAM;EAC3C,OACCL,QAAQ,iBACPL,sDAAA,CAACwC,8DAAW;IACXlC,KAAK,EAAGA,KAAO;IACfC,KAAK,EAAGA,KAAO;IACfG,QAAQ,EAAGA,QAAU;IACrByD,qBAAqB;IACrBpC,uBAAuB;EAAA,CACvB,CACD;AAEH,CACD,CAAC;;;;;;;;;;ACpGD;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://meta-edit/./src/meta-edit/field/color.jsx","webpack://meta-edit/./src/meta-edit/field/label.jsx","webpack://meta-edit/./src/meta-edit/field/media.jsx","webpack://meta-edit/./src/meta-edit/field/textarea.jsx","webpack://meta-edit/./src/meta-edit/index.jsx","webpack://meta-edit/./src/meta-edit/metaFieldsPanel.jsx","webpack://meta-edit/external window [\"wp\",\"blockEditor\"]","webpack://meta-edit/external window [\"wp\",\"components\"]","webpack://meta-edit/external window [\"wp\",\"data\"]","webpack://meta-edit/external window [\"wp\",\"editor\"]","webpack://meta-edit/external window [\"wp\",\"hooks\"]","webpack://meta-edit/external window [\"wp\",\"plugins\"]","webpack://meta-edit/external window \"ReactJSXRuntime\"","webpack://meta-edit/webpack/bootstrap","webpack://meta-edit/webpack/runtime/compat get default export","webpack://meta-edit/webpack/runtime/define property getters","webpack://meta-edit/webpack/runtime/hasOwnProperty shorthand","webpack://meta-edit/webpack/runtime/make namespace object"],"sourcesContent":["import { ColorPalette } from '@wordpress/components';\nimport { Label } from './label';\nimport { addFilter } from '@wordpress/hooks';\n\naddFilter(\n\t'meta-edit.field.component',\n\t'meta-edit.field.component.renderer',\n\t( renderer, { label, value, type, slug, onChange } ) => {\n\t\tif ( type !== 'color' ) {\n\t\t\treturn renderer;\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Label label={ label } name={ slug } />\n\t\t\t\t<ColorPalette\n\t\t\t\t\tname={ slug }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n);\n","export function Label( { label, name } ) {\n\tconst readableLabel = label.replace( /_/g, ' ' );\n\treturn (\n\t\t<label\n\t\t\thtmlFor={ name }\n\t\t\tstyle={ {\n\t\t\t\tdisplay: 'block',\n\t\t\t\tmarginBottom: '10px',\n\t\t\t\ttextTransform: 'capitalize',\n\t\t\t} }\n\t\t>\n\t\t\t{ readableLabel }\n\t\t</label>\n\t);\n}\n","import { Button } from '@wordpress/components';\nimport { MediaUpload } from '@wordpress/block-editor';\nimport { addFilter } from '@wordpress/hooks';\nimport { Label } from './label';\n\naddFilter(\n\t'meta-edit.field.component',\n\t'meta-edit.field.component.renderer',\n\t( renderer, { label, value, type, slug, onChange } ) => {\n\t\tif ( type !== 'media' ) { \n\t\t\treturn renderer;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Label label={ label } name={ slug } />\n\t\t\t\t<MediaUpload\n\t\t\t\t\tonSelect={ ( newValue )=> onChange( newValue?.url ) }\n\t\t\t\t\tallowedTypes={ [ 'image' ] }\n\t\t\t\t\trender={ ( { open } ) => (\n\t\t\t\t\t\tvalue ? (\n\t\t\t\t\t\t\t<a onClick={open}><img src={ value } /></a>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Button onClick={ open }>Open Media Library</Button>\n\t\t\t\t\t\t)\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n);\n","import { TextareaControl } from '@wordpress/components';\nimport { addFilter } from '@wordpress/hooks';\n\naddFilter(\n\t'meta-edit.field.component',\n\t'meta-edit.field.component.renderer',\n\t( renderer, { label, value, type, slug, onChange } ) => {\n\t\tif ( type !== 'textarea' ) {\n\t\t\treturn renderer;\n\t\t}\n\t\treturn (\n\t\t\t<TextareaControl\n\t\t\t\tlabel={ label }\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ onChange }\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t/>\n\t\t);\n\t}\n);\n","import { registerPlugin } from '@wordpress/plugins';\nimport MetaFieldsPanel from './metaFieldsPanel';\nrequire( './field/textarea' );\nrequire( './field/color' );\nrequire( './field/media' );\n\nregisterPlugin( 'meta-edit', {\n\ticon: 'palmtree',\n\ttitle: 'Meta Edit',\n\trender: MetaFieldsPanel,\n} );\n","import { PluginDocumentSettingPanel } from '@wordpress/editor';\nimport { useSelect } from '@wordpress/data';\nimport { applyFilters, addFilter } from '@wordpress/hooks';\nimport { TextControl } from '@wordpress/components';\n\nconst MetaFieldsPanel = () => {\n\tconst postType = useSelect(\n\t\t( select ) => select( 'core/editor' ).getCurrentPostType(),\n\t\t[]\n\t);\n\n\tconst supports = useSelect(\n\t\t( select ) => select( 'core' ).getPostType( postType ).supports,\n\t\t[ postType ]\n\t);\n\n\tif (\n\t\t! supports ||\n\t\t! supports[ 'meta-edit' ] ||\n\t\t! supports[ 'meta-edit' ][ 0 ]\n\t) {\n\t\treturn;\n\t}\n\n\tconst fields = supports[ 'meta-edit' ][ 0 ];\n\n\tconst postId = useSelect(\n\t\t( select ) => select( 'core/editor' ).getCurrentPostId(),\n\t\t[]\n\t);\n\n\tconst existingMetaFields = useSelect(\n\t\t( select ) => {\n\t\t\treturn select( 'core' ).getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tpostType,\n\t\t\t\tpostId\n\t\t\t)?.meta;\n\t\t},\n\t\t[ postType, postId ]\n\t);\n\n\tconst nicePostType = postType\n\t\t.replace( /_/g, ' ' )\n\t\t.replace( /\\b\\w/g, ( char ) => char.toUpperCase() );\n\n\treturn (\n\t\t<PluginDocumentSettingPanel\n\t\t\tname={ 'meta-edit-panel' }\n\t\t\ttitle={ `${ nicePostType } Meta` }\n\t\t>\n\t\t\t{ Object.entries( fields )\n\t\t\t\t.filter( ( [ key ] ) => {\n\t\t\t\t\treturn existingMetaFields[ key ] !== undefined;\n\t\t\t\t} )\n\t\t\t\t.map( ( [ key, value ] ) => {\n\t\t\t\t\tconst slug = key;\n\t\t\t\t\tconst label = slug\n\t\t\t\t\t\t.replace( /_/g, ' ' )\n\t\t\t\t\t\t.replace( /\\b\\w/g, ( char ) => char.toUpperCase() );\n\t\t\t\t\tconst type = value;\n\t\t\t\t\tconst metaValue = existingMetaFields[ key ] || '';\n\t\t\t\t\tconst onChange = ( newValue ) => {\n\t\t\t\t\t\twp.data.dispatch( 'core/editor' ).editPost( {\n\t\t\t\t\t\t\tid: postId,\n\t\t\t\t\t\t\ttype: postType,\n\t\t\t\t\t\t\tmeta: { [ key ]: newValue },\n\t\t\t\t\t\t} );\n\t\t\t\t\t};\n\n\t\t\t\t\tconst renderer = applyFilters(\n\t\t\t\t\t\t'meta-edit.field.component',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t{ label, value: metaValue, type, slug, onChange }\n\t\t\t\t\t);\n\n\t\t\t\t\treturn <div key={ key }>{ renderer }</div>;\n\t\t\t\t} ) }\n\t\t</PluginDocumentSettingPanel>\n\t);\n};\n\nexport default MetaFieldsPanel;\n\naddFilter(\n\t'meta-edit.field.component',\n\t'meta-edit.field.component.renderer',\n\t( renderer, { label, value, onChange } ) => {\n\t\treturn (\n\t\t\trenderer || (\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ label }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t/>\n\t\t\t)\n\t\t);\n\t}\n);\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["ColorPalette","Label","addFilter","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","renderer","label","value","type","slug","onChange","children","name","readableLabel","replace","htmlFor","style","display","marginBottom","textTransform","Button","MediaUpload","onSelect","newValue","url","allowedTypes","render","open","onClick","src","TextareaControl","__nextHasNoMarginBottom","registerPlugin","MetaFieldsPanel","require","icon","title","PluginDocumentSettingPanel","useSelect","applyFilters","TextControl","postType","select","getCurrentPostType","supports","getPostType","fields","postId","getCurrentPostId","existingMetaFields","getEditedEntityRecord","meta","nicePostType","char","toUpperCase","Object","entries","filter","key","undefined","map","metaValue","wp","data","dispatch","editPost","id","__next40pxDefaultSize"],"sourceRoot":""}