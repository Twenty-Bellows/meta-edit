{"version":3,"file":"editor.js","mappings":"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","sources":["webpack://meta-edit/./src/meta-edit/field/color.jsx","webpack://meta-edit/./src/meta-edit/field/default.jsx","webpack://meta-edit/./src/meta-edit/field/label.jsx","webpack://meta-edit/./src/meta-edit/field/media.jsx","webpack://meta-edit/./src/meta-edit/field/relationship.jsx","webpack://meta-edit/./src/meta-edit/field/textarea.jsx","webpack://meta-edit/./src/meta-edit/index.jsx","webpack://meta-edit/./src/meta-edit/metaFieldsPanel.jsx","webpack://meta-edit/external window [\"wp\",\"blockEditor\"]","webpack://meta-edit/external window [\"wp\",\"components\"]","webpack://meta-edit/external window [\"wp\",\"data\"]","webpack://meta-edit/external window [\"wp\",\"editor\"]","webpack://meta-edit/external window [\"wp\",\"hooks\"]","webpack://meta-edit/external window [\"wp\",\"plugins\"]","webpack://meta-edit/external window \"ReactJSXRuntime\"","webpack://meta-edit/webpack/bootstrap","webpack://meta-edit/webpack/runtime/compat get default export","webpack://meta-edit/webpack/runtime/define property getters","webpack://meta-edit/webpack/runtime/hasOwnProperty shorthand","webpack://meta-edit/webpack/runtime/make namespace object"],"sourcesContent":["/**\n *\n * This is the renderer for color fields in meta-edit.\n * It is used if the field type is 'color'.\n *\n */\n\nimport { ColorPalette } from '@wordpress/components';\nimport { Label } from './label';\nimport { addFilter } from '@wordpress/hooks';\n\naddFilter(\n\t'meta-edit.field.component',\n\t'meta-edit.field.component.renderer',\n\t( renderer, { label, value, type, slug, onChange } ) => {\n\t\tif ( type !== 'color' ) {\n\t\t\treturn renderer;\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Label label={ label } name={ slug } />\n\t\t\t\t<ColorPalette\n\t\t\t\t\tclearable={ false }\t\n\t\t\t\t\tname={ slug }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n);\n","/**\n *\n * Default renderer for meta-edit fields. It will be used if no other renderer is provided.\n * This is a simple text input field.\n *\n */\n\nimport { TextControl } from '@wordpress/components';\nimport { addFilter } from '@wordpress/hooks';\n\naddFilter(\n\t'meta-edit.field.component',\n\t'meta-edit.field.component.renderer',\n\t( renderer, { label, value, onChange } ) => {\n\t\treturn (\n\t\t\trenderer || (\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ label }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t/>\n\t\t\t)\n\t\t);\n\t}\n);\n","export function Label( { label, name } ) {\n\tconst readableLabel = label.replace( /_/g, ' ' );\n\treturn (\n\t\t<label\n\t\t\thtmlFor={ name }\n\t\t\tstyle={ {\n\t\t\t\tdisplay: 'block',\n\t\t\t\tmarginBottom: '10px',\n\t\t\t\ttextTransform: 'uppercase',\n\t\t\t\tfontSize: '11px',\n    \t\t\t\tfontWeight: 500,\n\t\t\t\tlineHeight: 1.4\n\t\t\t} }\n\t\t>\n\t\t\t{ readableLabel }\n\t\t</label>\n\t);\n}\n","/**\n *\n * Renderer for media fields in meta-edit.\n * It is used if the field type is 'media'.\n * This field provides a URL string provided from selecting an asset from the Media Library.\n *\n */\n\nimport { Button } from '@wordpress/components';\nimport { MediaUpload } from '@wordpress/block-editor';\nimport { addFilter } from '@wordpress/hooks';\nimport { Label } from './label';\n\naddFilter(\n\t'meta-edit.field.component',\n\t'meta-edit.field.component.renderer',\n\t( renderer, { label, value, type, slug, onChange } ) => {\n\t\tif ( type !== 'media' ) {\n\t\t\treturn renderer;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Label label={ label } name={ slug } />\n\t\t\t\t<MediaUpload\n\t\t\t\t\tonSelect={ ( newValue ) => onChange( newValue?.url ) }\n\t\t\t\t\tallowedTypes={ [ 'image' ] }\n\t\t\t\t\trender={ ( { open } ) =>\n\t\t\t\t\t\tvalue ? (\n\t\t\t\t\t\t\t<a onClick={ open }>\n\t\t\t\t\t\t\t\t<img src={ value } />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Button onClick={ open }>Open Media Library</Button>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n);\n","/**\n *\n * This is the renderer for relationship fields in meta-edit.\n * It is used if the field type is set to the slug of a post type.\n * All posts of that type will be available for selection.\n * The value stored is the ID of the selected post.\n *\n */\n\nimport { addFilter } from '@wordpress/hooks';\nimport { useSelect } from '@wordpress/data';\nimport { ComboboxControl } from '@wordpress/components';\n\naddFilter(\n\t'meta-edit.field.component',\n\t'meta-edit.field.component.renderer',\n\t( renderer, { label, value, type, slug, onChange } ) => {\n\t\tconst posts = useSelect( ( select ) => {\n\t\t\tlet postTypes = select( 'core' )\n\t\t\t\t.getPostTypes()\n\t\t\t\t?.map( ( postType ) => postType.slug );\n\t\t\tif ( ! postTypes?.includes( type ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn (\n\t\t\t\tselect( 'core' ).getEntityRecords( 'postType', type, {\n\t\t\t\t\tper_page: -1,\n\t\t\t\t\torder: 'asc',\n\t\t\t\t\torderby: 'title',\n\t\t\t\t\t_fields: [ 'id', 'title' ],\n\t\t\t\t} ) || []\n\t\t\t);\n\t\t}, [] );\n\n\t\tif ( posts === null ) {\n\t\t\treturn renderer;\n\t\t}\n\n\t\treturn (\n\t\t\t<ComboboxControl\n\t\t\t\tlabel={ label }\n\t\t\t\tvalue={ parseInt( value ) }\n\t\t\t\tonChange={ ( value ) => onChange( value?.toString() ?? 0 ) }\n\t\t\t\tisLoading={ posts.length === 0 }\n\t\t\t\tplaceholder={\n\t\t\t\t\tposts.length === 0 ? 'Loading...' : 'Select a ' + type\n\t\t\t\t}\n\t\t\t\toptions={\n\t\t\t\t\tposts?.map( ( post ) => ( {\n\t\t\t\t\t\tlabel: post.title.raw,\n\t\t\t\t\t\tvalue: post.id,\n\t\t\t\t\t} ) ) ?? []\n\t\t\t\t}\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t__next40pxDefaultSize\n\t\t\t/>\n\t\t);\n\t}\n);\n","/**\n *\n * This is the renderer for textarea fields in meta-edit.\n * It is used if the field type is 'textarea'.\n *\n */\n\nimport { TextareaControl } from '@wordpress/components';\nimport { addFilter } from '@wordpress/hooks';\n\naddFilter(\n\t'meta-edit.field.component',\n\t'meta-edit.field.component.renderer',\n\t( renderer, { label, value, type, slug, onChange } ) => {\n\t\tif ( type !== 'textarea' ) {\n\t\t\treturn renderer;\n\t\t}\n\t\treturn (\n\t\t\t<TextareaControl\n\t\t\t\tlabel={ label }\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ onChange }\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t/>\n\t\t);\n\t}\n);\n","import { registerPlugin } from '@wordpress/plugins';\nimport MetaFieldsPanel from './metaFieldsPanel';\n\nimport './field/default';\nimport './field/textarea';\nimport './field/color';\nimport './field/media';\nimport './field/relationship';\n\nregisterPlugin( 'meta-edit', {\n\ticon: 'palmtree',\n\ttitle: 'Meta Edit',\n\trender: MetaFieldsPanel,\n} );\n","import { PluginDocumentSettingPanel } from '@wordpress/editor';\nimport { useSelect } from '@wordpress/data';\nimport { applyFilters } from '@wordpress/hooks';\n\nconst MetaFieldsPanel = () => {\n\tconst { postType, fields, postId, existingMetaFields } = useSelect(\n\t\t( select ) => {\n\t\t\tconst postType = select( 'core/editor' ).getCurrentPostType();\n\t\t\tconst supports = select( 'core' ).getPostType( postType )?.supports;\n\t\t\tif ( ! supports?.[ 'meta-edit' ]?.[ 0 ] ) {\n\t\t\t\treturn {\n\t\t\t\t\tpostType,\n\t\t\t\t};\n\t\t\t}\n\t\t\tconst fields = supports[ 'meta-edit' ][ 0 ];\n\t\t\tconst postId = select( 'core/editor' ).getCurrentPostId();\n\t\t\tconst existingMetaFields = select( 'core' ).getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tpostType,\n\t\t\t\tpostId\n\t\t\t)?.meta;\n\n\t\t\treturn { postType, fields, postId, existingMetaFields };\n\t\t},\n\t\t[]\n\t);\n\n\tif ( ! fields ) {\n\t\treturn null;\n\t}\n\n\tconst prettyPostType = postType\n\t\t.replace( /_/g, ' ' )\n\t\t.replace( /\\b\\w/g, ( char ) => char.toUpperCase() );\n\n\treturn (\n\t\t<PluginDocumentSettingPanel\n\t\t\tname={ 'meta-edit-panel' }\n\t\t\ttitle={ `${ prettyPostType } Meta` }\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={ {\n\t\t\t\t\tgap: '16px',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ Object.entries( fields )\n\t\t\t\t\t.filter( ( [ key ] ) => {\n\t\t\t\t\t\treturn key in existingMetaFields;\n\t\t\t\t\t} )\n\t\t\t\t\t.map( ( [ key, value ] ) => {\n\t\t\t\t\t\tconst slug = key;\n\t\t\t\t\t\tconst label = slug\n\t\t\t\t\t\t\t.replace( /_/g, ' ' )\n\t\t\t\t\t\t\t.replace( /\\b\\w/g, ( char ) => char.toUpperCase() );\n\t\t\t\t\t\tconst type = value;\n\t\t\t\t\t\tconst metaValue = existingMetaFields[ key ] || '';\n\t\t\t\t\t\tconst onChange = ( newValue ) => {\n\t\t\t\t\t\t\twp.data.dispatch( 'core/editor' ).editPost( {\n\t\t\t\t\t\t\t\tid: postId,\n\t\t\t\t\t\t\t\ttype: postType,\n\t\t\t\t\t\t\t\tmeta: { [ key ]: newValue },\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst renderer = applyFilters(\n\t\t\t\t\t\t\t'meta-edit.field.component',\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t{ label, value: metaValue, type, slug, onChange }\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn <div key={ key }>{ renderer }</div>;\n\t\t\t\t\t} ) }\n\t\t\t</div>\n\t\t</PluginDocumentSettingPanel>\n\t);\n};\n\nexport default MetaFieldsPanel;\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["ColorPalette","Label","addFilter","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","renderer","label","value","type","slug","onChange","children","name","clearable","TextControl","__next40pxDefaultSize","__nextHasNoMarginBottom","readableLabel","replace","htmlFor","style","display","marginBottom","textTransform","fontSize","fontWeight","lineHeight","Button","MediaUpload","onSelect","newValue","url","allowedTypes","render","open","onClick","src","useSelect","ComboboxControl","_posts$map","posts","select","postTypes","getPostTypes","map","postType","includes","getEntityRecords","per_page","order","orderby","_fields","parseInt","_value$toString","toString","isLoading","length","placeholder","options","post","title","raw","id","TextareaControl","registerPlugin","MetaFieldsPanel","icon","PluginDocumentSettingPanel","applyFilters","fields","postId","existingMetaFields","getCurrentPostType","supports","getPostType","getCurrentPostId","getEditedEntityRecord","meta","prettyPostType","char","toUpperCase","gap","flexDirection","Object","entries","filter","key","metaValue","wp","data","dispatch","editPost"],"sourceRoot":""}