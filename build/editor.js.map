{"version":3,"file":"editor.js","mappings":"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","sources":["webpack://meta-edit/./src/meta-edit/index.jsx","webpack://meta-edit/./src/meta-edit/metaFieldsPanel.jsx","webpack://meta-edit/external window [\"wp\",\"components\"]","webpack://meta-edit/external window [\"wp\",\"data\"]","webpack://meta-edit/external window [\"wp\",\"editor\"]","webpack://meta-edit/external window [\"wp\",\"hooks\"]","webpack://meta-edit/external window [\"wp\",\"plugins\"]","webpack://meta-edit/external window \"ReactJSXRuntime\"","webpack://meta-edit/webpack/bootstrap","webpack://meta-edit/webpack/runtime/compat get default export","webpack://meta-edit/webpack/runtime/define property getters","webpack://meta-edit/webpack/runtime/hasOwnProperty shorthand","webpack://meta-edit/webpack/runtime/make namespace object"],"sourcesContent":["import { registerPlugin } from '@wordpress/plugins';\nimport MetaFieldsPanel from './metaFieldsPanel';\n\nregisterPlugin('meta-edit', {\n  icon: 'palmtree',\n  title: 'Meta Edit',\n  render: MetaFieldsPanel\n});","import { PluginDocumentSettingPanel } from '@wordpress/editor'\nimport { useSelect } from '@wordpress/data'\nimport { applyFilters } from '@wordpress/hooks'\nimport { TextControl } from '@wordpress/components'\n\nconst Field = ({ label, value, onChange, name, type }) => {\n  \n  const DefaultComponent = <TextControl label={label} value={value} onChange={onChange} __next40pxDefaultSize __nextHasNoMarginBottom/>;\n\n  return applyFilters(\n    'meta-edit.field.component',\n    DefaultComponent,\n    {\n      label,\n      value,\n      onChange,\n      name,\n      type,\n    }\n  );\n}\n\nconst MetaFieldsPanel = () => {\n\n  // Get meta fields from post type\n  const postType = useSelect(\n    (select) => select('core/editor').getCurrentPostType(),\n    []\n  )\n\n  const supports = useSelect(\n    (select) => select('core').getPostType(postType).supports,\n    [postType]\n  )\n\n  if (!supports || !supports['meta-edit'] || !supports['meta-edit'][0]) {\n    return;\n  }\n\n  const fields = supports['meta-edit'][0]\n\n  const postId = useSelect(\n    (select) => select('core/editor').getCurrentPostId(),\n    []\n  )\n\n  const existingMetaFields = useSelect(\n    (select) => {\n      return select('core').getEditedEntityRecord('postType', postType, postId)\n        ?.meta\n    },\n    [postType, postId]\n  )\n\n  const nicePostType = postType.replace(/_/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase())\n\n  return (\n    <PluginDocumentSettingPanel \n      name={\"meta-edit-panel\"}\n      title={`${nicePostType} Meta`}>\n      { Object.entries(fields)\n        .filter(([key]) => {\n          return existingMetaFields[key] !== undefined;\n        })\n        .map(([key, value]) => {\n          return (<Field\n            key={key}\n            label={key.replace(/_/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase())}\n            value={existingMetaFields[key] || ''}\n            name={key}\n            type={value}\n            onChange={(newValue) => {\n              // Update in-memory value and save to the database\n              wp.data.dispatch('core/editor').editPost({\n               id: postId,\n               type: postType,\n               meta: { [key]: newValue },\n              })\n            }}\n          />)\n        })\n      }\n    </PluginDocumentSettingPanel>\n  )\n}\n\nexport default MetaFieldsPanel\n","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["registerPlugin","MetaFieldsPanel","icon","title","render","PluginDocumentSettingPanel","useSelect","applyFilters","TextControl","jsx","_jsx","Field","label","value","onChange","name","type","DefaultComponent","__next40pxDefaultSize","__nextHasNoMarginBottom","postType","select","getCurrentPostType","supports","getPostType","fields","postId","getCurrentPostId","existingMetaFields","getEditedEntityRecord","meta","nicePostType","replace","char","toUpperCase","children","Object","entries","filter","key","undefined","map","newValue","wp","data","dispatch","editPost","id"],"sourceRoot":""}