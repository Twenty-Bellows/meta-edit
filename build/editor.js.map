{"version":3,"file":"editor.js","mappings":"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","sources":["webpack://meta-edit/./src/meta-edit/field/textarea.jsx","webpack://meta-edit/./src/meta-edit/index.jsx","webpack://meta-edit/./src/meta-edit/metaFieldsPanel.jsx","webpack://meta-edit/external window [\"wp\",\"components\"]","webpack://meta-edit/external window [\"wp\",\"data\"]","webpack://meta-edit/external window [\"wp\",\"editor\"]","webpack://meta-edit/external window [\"wp\",\"hooks\"]","webpack://meta-edit/external window [\"wp\",\"plugins\"]","webpack://meta-edit/external window \"ReactJSXRuntime\"","webpack://meta-edit/webpack/bootstrap","webpack://meta-edit/webpack/runtime/compat get default export","webpack://meta-edit/webpack/runtime/define property getters","webpack://meta-edit/webpack/runtime/hasOwnProperty shorthand","webpack://meta-edit/webpack/runtime/make namespace object"],"sourcesContent":["import { TextareaControl } from '@wordpress/components'\nimport { addFilter } from '@wordpress/hooks'\n\naddFilter( \n\t'meta-edit.field.component', \n\t'meta-edit.field.component.renderer', \n\t( renderer, { label, value, type, slug, onChange } ) => {\n\t\tif ( type !== 'textarea' ) {\n\t\t\treturn renderer;\n\t\t}\n        \treturn <TextareaControl label={label} value={value} onChange={onChange} __nextHasNoMarginBottom/>\n\t} \n);","import { registerPlugin } from '@wordpress/plugins';\nimport MetaFieldsPanel from './metaFieldsPanel';\nrequire ('./field/textarea');\n\nregisterPlugin('meta-edit', {\n  icon: 'palmtree',\n  title: 'Meta Edit',\n  render: MetaFieldsPanel\n});","import { PluginDocumentSettingPanel } from '@wordpress/editor'\nimport { useSelect } from '@wordpress/data'\nimport { applyFilters, addFilter } from '@wordpress/hooks'\nimport { TextControl } from '@wordpress/components'\n\nconst MetaFieldsPanel = () => {\n\n  const postType = useSelect(\n    (select) => select('core/editor').getCurrentPostType(),\n    []\n  )\n\n  const supports = useSelect(\n    (select) => select('core').getPostType(postType).supports,\n    [postType]\n  )\n\n  if (!supports || !supports['meta-edit'] || !supports['meta-edit'][0]) {\n    return;\n  }\n\n  const fields = supports['meta-edit'][0]\n\n  const postId = useSelect(\n    (select) => select('core/editor').getCurrentPostId(),\n    []\n  )\n\n  const existingMetaFields = useSelect(\n    (select) => {\n      return select('core').getEditedEntityRecord('postType', postType, postId)\n        ?.meta\n    },\n    [postType, postId]\n  )\n\n  const nicePostType = postType.replace(/_/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase())\n\n  return (\n    <PluginDocumentSettingPanel \n      name={\"meta-edit-panel\"}\n      title={`${nicePostType} Meta`}>\n      { Object.entries(fields)\n        .filter(([key]) => {\n          return existingMetaFields[key] !== undefined;\n        })\n        .map(([key, value]) => {\n\n          const slug = key;\n          const label = slug.replace(/_/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase());\n          const type  = value;\n          const metaValue = existingMetaFields[key] || '';\n          const onChange = ( newValue ) => {\n\t\t          wp.data.dispatch( 'core/editor' ).editPost( {\n\t\t\t          id: postId,\n\t\t\t          type: postType,\n\t\t\t          meta: { [ key ]: newValue },\n\t\t          } );\n          };\n\n          const renderer = applyFilters( 'meta-edit.field.component', null,\n              { label, value:metaValue, type, slug, onChange }\n          ); \n\n          return <div key={key}>{renderer}</div>;\n          \n        })\n      }\n    </PluginDocumentSettingPanel>\n  )\n}\n\nexport default MetaFieldsPanel\n\naddFilter( \n\t'meta-edit.field.component', \n\t'meta-edit.field.component.renderer', \n\t( renderer, { label, value, onChange } ) => {\n    return renderer || (<TextControl \n                          label={label} \n                          value={value} \n                          onChange={onChange} \n                          __next40pxDefaultSize \n                          __nextHasNoMarginBottom\n                        />);\n\t} \n);","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["TextareaControl","addFilter","jsx","_jsx","renderer","label","value","type","slug","onChange","__nextHasNoMarginBottom","registerPlugin","MetaFieldsPanel","require","icon","title","render","PluginDocumentSettingPanel","useSelect","applyFilters","TextControl","postType","select","getCurrentPostType","supports","getPostType","fields","postId","getCurrentPostId","existingMetaFields","getEditedEntityRecord","meta","nicePostType","replace","char","toUpperCase","name","children","Object","entries","filter","key","undefined","map","metaValue","newValue","wp","data","dispatch","editPost","id","__next40pxDefaultSize"],"sourceRoot":""}